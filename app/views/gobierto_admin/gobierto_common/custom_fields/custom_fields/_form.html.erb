<%= render "gobierto_admin/shared/validation_errors", resource: @custom_field_form %>

<%= form_for(@custom_field_form,
             as: :custom_field,
             url: @custom_field_form.persisted? ? admin_common_custom_fields_custom_field_path(@custom_field_form) : admin_common_custom_fields_module_resource_custom_fields_path(module_resource_name: @custom_field_form.resource_name),
             data: { 'globalized-form-container' => true }) do |f| %>
  <div class="pure-g">
    <div class="pure-u-1 pure-u-md-16-24">

      <div class="globalized_fields">
        <%= render "gobierto_admin/shared/form_locale_switchers" %>

        <% current_site.configuration.available_locales.each do |locale| %>
          <div class="form_item input_text" data-locale="<%= locale %>">
            <%= label_tag "custom_field[name_translations][#{locale}]" do %>
              <%= f.object.class.human_attribute_name(:name) %>
              <%= attribute_indication_tag required: true %>
            <% end %>
            <%= text_field_tag "custom_field[name_translations][#{locale}]", f.object.name_translations && f.object.name_translations[locale] %>
          </div>
        <% end %>
      </div>

      <div class="form_block">
        <div class="form_item site-module-check-boxes">
          <div class="options compact">
            <h4><%= f.object.class.human_attribute_name(:field_type) %></h4>
            <%= f.collection_radio_buttons(:field_type, @custom_field_form.available_field_types, :first, :first) do |b| %>
              <div class="option">
                <%= b.radio_button(data: { has_options: @types_with_options.include?(b.text) }) %>
                <%= b.label do %>
                  <span></span>
                  <%= f.object.class.human_attribute_name(b.text) %>
                <% end %>
              </div>
            <% end %>
          </div>
        </div>
      </div>

      <div class="form_block">
        <%= content_tag :div,
          class: "form_item",
          id: "options",
          style: GobiertoCommon::CustomField.field_types_with_options.keys.include?(@custom_field_form.field_type) ? nil : "display: none;" do %>

          <h4 class="options compact"><%= f.object.class.human_attribute_name(:options) %></h4>

          <div id="options-list">
            <% @custom_field_form.options.each do |key, translations| %>
              <%= render "option", key: key, translations: translations  %>
            <% end %>
          </div>

          <%= content_tag :span,
            id: "new-option-form",
            style: "display: none;" do %>
            <%= render "new_option" %>
          <% end %>

          <div class="m_2" id="add-option">
            <%= link_to "#", data: { behavior: "new_option" } do %>
              <i class="fa fa-plus-circle"></i>
              <%= t(".add_option") %>
            <% end %>
          </div>
        <% end %>
      </div>

    </div>

    <div class="pure-u-1 pure-u-md-2-24"></div>

    <%= render partial: 'gobierto_admin/shared/save_widget', locals: { f: f, levels: [] } %>
  </div>
<% end %>

<% content_for :javascript_hook do %>
  <%= javascript_tag do %>
    window.GobiertoAdmin.gobierto_common_custom_fields_controller = new GobiertoAdmin.GobiertoCommonCustomFieldsController
    window.GobiertoAdmin.gobierto_common_custom_fields_controller.handleForm();
  <% end %>
<% end %>
